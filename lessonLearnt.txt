pip install django
create a django project by typing :  django-admin startproject "name of project without '' . "  FOR EXAMPLE django-admin startproject django_todo .

To expose the django project, u type in cmd terminal : python manage.py runserver

URLS:
type in cmd:
              django-admin startapp todo

in the urls.py file > urlpatterns = [(regularexpression)r'^name of app$', name of function in the views.py file]

ADMIN: in command enter:
1:  sqlite3 dbsqlite3
2:  python manage.py migrate (we can run our migrations)
3: .tables
4: .quit
5: select * from django_migrations;
6:.header on then select * from django_migrations
7:.mode column then select * from django_migrations

8:python manage.py createsuperuser
9:sqlite3 db.sqlite3/.tables/select * from auth_user;/.mode column/.headers on/select * from auth_user;
line 9 will give a more readable environment to a table

Lessons learnt for sqlite table. (to make the table more readable do the following):

1:  sqlite3 dbsqlite3
2:  .tables
3:  select * from django_migrations;
4:  .headers on
5:  .mode column
6:  select * from django_migrations;

MODELS

1:  python manage.py makemigrations (this cmd will make a file > create a new table in our database called todo_items)
2:  sqlite3 dbsqlite3
3:  .tables

pip install coverage: how much of our code we have run/tested

coverage cmd keys:
1:  coverage run manage.py test
2:  coverage report (but it does a test report on all of the python packages)
3: for a specific directory i.e. todo i will input : coverage run --source=todo manage.py test

if i do a test, i.e. in models.py file as when u conduct a test (coverage report) and its got 68% we need 100% testing results so when we do a test we then get the report up to see if its been updated, i.e. in cmd: coverage report

IMPORTANT: for updates to coverage report (if u have "missing" in one of the files(this means u need testing whatever is indicated in red) once u do a test in one of the test.py files TO SEE the new coverage (updated coverage) in the cmd terminal u need to type

1  coverage run --source=todo manage.py test
2: coverage html then reload the page)

Installing gunicorn: pip install gunicorn: what is it?
ANSWER: This is the package that will be used to run the application on the server

Creating a Heroku app: in cmd terminal:
heroku create nameOfProject-django-todo --region eu

to see the remotes i have (in this case 2) i input:
git remote -v

HEROKU ADDONS:
to create a addon in heroku like a postgresql u type in the following:

heroku addons:create heroku-postgresql:hobby-dev
(level of subscription we want which is hobby-dev)

CONNECTING TO OUR REMOTE DATABASE

pip install dj_database_url

the above package parses database URI's
The URI is in the config vars under settings(heroku). 
THEN: pip freeze --local > requirements.txt
(the above to have a refresh of packages installed for this specific project)
then:
heroku config
output: config vars variables
then:
python manage.py migrate
(my migration should now be applied and there we go we've successfully connected
to a Postgres database hosted on heroku
through Django)

You will also need to reference the package installation in the settings.py file

IMPORTANT:

I have thought something: i have written updates on each lesson on this module here. A simple solution would be, name of lesson and a URI link to the lesson. As an example:

LESSON:  

Connecting To Our Remote Database

link: https://www.youtube.com/watch?time_continue=166&v=1Mk2cKFVeaY

LESSON:
Attempting a First Delpoyment

1 important feature: in cmd type: heroku config:set DISABLE_COLLECTSTATIC=1 (it will turn off the collection for any static files so HTML CSS and JavaScript mostly that needs to be be turned off because we don't have a
process for dealing with that at the moment as we don't have any CSS and
JavaScript files)

LINK: https://www.youtube.com/watch?time_continue=60&v=v2Hl0Aa7qFE

LESSON:
 Deploying Our Project

LEARNT: echo web: gunicorn django_todo.wsgi:application > Procfile
The above is a less complex way of saying "python manage.py runserver"

LINK:
https://www.youtube.com/watch?time_continue=55&v=yjYYi_oxVjk

